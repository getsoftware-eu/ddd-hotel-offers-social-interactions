<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>eu.getsoftware.hotelico</groupId>
	<artifactId>hotelservices</artifactId>
	<packaging>pom</packaging>
	<version>0.0.1-SNAPSHOT</version>
	
	<modules>
		<module>chat</module>
        <module>clients</module>
		<module>eureka-server</module>
		<module>menu</module>
		<module>hotel-client</module>
	</modules>
	
	<name>social-hotel-interactions</name>
	<url>http://getSoftware.eu</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!--<spring.version>4.0.2.RELEASE</spring.version>-->
		<!--<mysql.connector.version>5.1.31</mysql.connector.version>-->
		<kotlin.version>1.4.0</kotlin.version>
		<kotlin.compiler.jvmTarget>1.8</kotlin.compiler.jvmTarget>
		<jetty-version>8.1.16.v20140903</jetty-version>
		<spring.boot.maven.plugin.version>2.5.7</spring.boot.maven.plugin.version>
		<spring.boot.dependencies.version>2.5.7</spring.boot.dependencies.version>
		<spring.cloud-version>2020.0.3</spring.cloud-version>
	</properties>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring.boot.dependencies.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring.cloud-version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>
	</dependencies>
	
	<build>
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
			</resource>
			<resource>
				<directory>${project.build.directory}/generated-resources</directory>
			</resource>
		</resources>
		<!--<plugins>-->
		<!--&lt;!&ndash;<plugin>&ndash;&gt;-->
		<!--&lt;!&ndash;<groupId>org.springframework.boot</groupId>&ndash;&gt;-->
		<!--&lt;!&ndash;<artifactId>spring-boot-maven-plugin</artifactId>&ndash;&gt;-->
		<!--&lt;!&ndash;</plugin>&ndash;&gt;-->
		<!-- -->
		<!--</plugins>-->
		<!--</build>-->
		<!-- -->
		<!-- -->
		<!--<build>-->
		<finalName>test35</finalName>

		<plugins>
			<!-- Compilation -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<source>17</source>
					<target>17</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<path>/${project.build.finalName}</path>
					<update>true</update>
					<!--<url>http://h2457130.stratoserver.net:8080/manager/text</url>-->
					<url>http://localhost:8080/manager/text</url>
					<username>tomcat</username>
					<password>frankfurt_2015</password>
				</configuration>
			</plugin>

			<!--make war with maven-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<packagingExcludes>node_modules/**, grunt/**, img/**</packagingExcludes>
				</configuration>
			</plugin>

			<!-- Run the application using "mvn jetty:run" -->
			<!-- Goals: jetty:run -->
			<!-- Profile: jetty9 -->
			<!-- VM arguments: -XX:MaxPermSize=512M -Xmx1g" -->
			<!--<plugin>-->
				<!--<groupId>org.eclipse.jetty</groupId>-->
				<!--<artifactId>jetty-maven-plugin</artifactId>-->
				<!--&lt;!&ndash; to update plugin to the higher version the atmosphere framework -->
					<!--should be updated first: https://github.com/Atmosphere/atmosphere/issues/1433 &ndash;&gt;-->
				<!--<version>9.2.5.v20141112</version>-->
				<!--<configuration>-->
					<!--<scanIntervalSeconds>0</scanIntervalSeconds>-->
					<!--&lt;!&ndash;<webAppConfig>&ndash;&gt;-->
					<!--&lt;!&ndash;<contextPath>/ROOT</contextPath>&ndash;&gt;-->
					<!--&lt;!&ndash;</webAppConfig>&ndash;&gt;-->
					<!--&lt;!&ndash;<webApp>&ndash;&gt;-->
					<!--&lt;!&ndash;<contextPath>/</contextPath>&ndash;&gt;-->
					<!--&lt;!&ndash;<war>${basedir}/target/ROOT.war</war>&ndash;&gt;-->
					<!--&lt;!&ndash;</webApp>&ndash;&gt;-->
					<!--&lt;!&ndash;<webAppSourceDirectory>${basedir}/target/ROOT</webAppSourceDirectory>&ndash;&gt;-->
					<!--&lt;!&ndash;<webAppConfig>&ndash;&gt;-->
					<!--&lt;!&ndash;<resourceBases>&ndash;&gt;-->
					<!--&lt;!&ndash;&lt;!&ndash;<resourceBase>${project.basedir}/src/main/webapp</resourceBase>&ndash;&gt;&ndash;&gt;-->
					<!--&lt;!&ndash;<resourceBase>${project.basedir}/target/ROOT</resourceBase>&ndash;&gt;-->
					<!--&lt;!&ndash;&lt;!&ndash;<resourceBase>${basedir}/target/ROOT</resourceBase>&ndash;&gt;&ndash;&gt;-->
					<!--&lt;!&ndash;</resourceBases>&ndash;&gt;-->
					<!--&lt;!&ndash;</webAppConfig>&ndash;&gt;-->
					<!--<stopKey>stop</stopKey>-->
					<!--<stopPort>9999</stopPort>-->
					<!--<systemProperties>-->
						<!--<systemProperty>-->
							<!--<name>hotel.execution-mode</name>-->
							<!--<value>development</value>-->
							<!--&lt;!&ndash; websockets dont work with default 8080 port in windows &ndash;&gt;-->
							<!--<name>jetty.port</name>-->
							<!--<value>8086</value>-->
						<!--</systemProperty>-->
					<!--</systemProperties>-->
				<!--</configuration>-->
			<!--</plugin>-->

			<plugin>
				<artifactId>kotlin-maven-plugin</artifactId>
				<groupId>org.jetbrains.kotlin</groupId>
				<version>${kotlin.version}</version>

				<configuration>
					<compilerPlugins>
						<!-- Or "spring" for the Spring support -->
						<!--<plugin>all-open</plugin>-->
						<plugin>spring</plugin>
					</compilerPlugins>

				</configuration>

				<executions>
					<execution>
						<id>compile</id>
						<goals> <goal>compile</goal> </goals>
						<configuration>
							<sourceDirs>
								<sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
								<sourceDir>${project.basedir}/src/main/java</sourceDir>
							</sourceDirs>
						</configuration>
					</execution>
					<execution>
						<id>test-compile</id>
						<goals> <goal>test-compile</goal> </goals>
						<configuration>
							<sourceDirs>
								<sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
								<sourceDir>${project.basedir}/src/test/java</sourceDir>
							</sourceDirs>
						</configuration>
					</execution>
				</executions>

				<dependencies>
					<dependency>
						<groupId>org.jetbrains.kotlin</groupId>
						<artifactId>kotlin-maven-allopen</artifactId>
						<version>${kotlin.version}</version>
					</dependency>
				</dependencies>

			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<excludeDefaultDirectories>true</excludeDefaultDirectories>
					<retryOnError>true</retryOnError>
					<filesets>
						<fileset>
							<directory>target</directory>
							<includes>
								<include>**/*</include>
							</includes>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<!-- Frontend Plugin -->
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.6</version>
				<executions>
					<!--<execution>
                        &lt;!&ndash; optional: you don't really need execution ids, but it looks nice
                                        in your build log. &ndash;&gt;
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        &lt;!&ndash; optional: default phase is "generate-resources" &ndash;&gt;
                        <phase>package</phase>
                    </execution>
                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            &lt;!&ndash; optional: The default argument is actually "install", so unless you
                                            need to run some other npm command, you can remove this whole <configuration>
                                            section. &ndash;&gt;
                            <arguments>install</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm-build-for-production</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <arguments>run build:prod</arguments>
                        </configuration>
                    </execution>-->
				</executions>
				<configuration>
					<nodeVersion>v8.1.2</nodeVersion>
					<npmVersion>5.2.0</npmVersion>
					<workingDirectory>src/main/frontend</workingDirectory>
				</configuration>
			</plugin>
			<!-- /Frontend Plugin -->
		</plugins>
	</build>
	
	<repositories>
		<repository>
			<id>org.springframework.maven.milestone</id>
			<name>Spring Maven Milestone Repository</name>
			<url>https://repo.spring.io/milestone</url>
		</repository>
		<repository>
			<id>central</id>
			<url>https://repo1.maven.org/maven2/</url>
		</repository>
		<!--<repository>-->
			<!--<id>org.jspresso.framework</id>-->
			<!--<url>https://repository.jspresso.org/maven2/</url>-->
		<!--</repository>-->
		<repository>
			<id>jaspersoft-third-party</id>
			<url>https://jaspersoft.jfrog.io/jaspersoft/third-party-ce-artifacts/</url>
		</repository>
	</repositories>
	<description>This application demonstrates how you can write real time applications using Spring 4 and AngularJS.</description>
</project>
